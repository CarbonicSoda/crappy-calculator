(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const y of document.querySelectorAll('link[rel="modulepreload"]'))g(y);new MutationObserver(y=>{for(const u of y)if(u.type==="childList")for(const d of u.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&g(d)}).observe(document,{childList:!0,subtree:!0});function l(y){const u={};return y.integrity&&(u.integrity=y.integrity),y.referrerPolicy&&(u.referrerPolicy=y.referrerPolicy),y.crossOrigin==="use-credentials"?u.credentials="include":y.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function g(y){if(y.ep)return;y.ep=!0;const u=l(y);fetch(y.href,u)}})();var n;(t=>{(r=>{r[r.Prefix=0]="Prefix",r[r.Postfix=1]="Postfix",r[r.Function=2]="Function"})(t.UnaryOpTypes||(t.UnaryOpTypes={})),(r=>{r[r.Bracket=0]="Bracket",r[r.Numeral=1]="Numeral",r[r.UnaryOp=2]="UnaryOp",r[r.BinaryOp=3]="BinaryOp"})(t.TokenTypes||(t.TokenTypes={})),(r=>{r[r.Root=0]="Root",r[r.Numeral=1]="Numeral",r[r.UnaryOp=2]="UnaryOp",r[r.BinaryOp=3]="BinaryOp"})(t.TreeTypes||(t.TreeTypes={}))})(n||(n={}));var a;(t=>{t.constantRegistry=new Map,t.constantSymbolRegistry=new Map,t.unaryOpRegistry=new Map,t.unaryOpSymbolRegistry=new Map,t.binaryOpRegistry=new Map,t.binaryOpSymbolRegistry=new Map;function r(o){return t.constantRegistry.has(o)}t.existConstant=r;function l(o){return t.constantSymbolRegistry.has(o)}t.existConstantWithSymbol=l;function g(o){return t.unaryOpRegistry.has(o)}t.existUnaryOp=g;function y(o){return t.unaryOpSymbolRegistry.has(o)}t.existUnaryOpWithSymbol=y;function u(o){return t.binaryOpRegistry.has(o)}t.existBinaryOp=u;function d(o){return t.binaryOpSymbolRegistry.has(o)}t.existBinaryOpWithSymbol=d;function s(o,O){if(r(o))throw new Error(`Constant with id ${o} already exists.`);if(l(O.symbol))throw new Error(`Constant with symbol ${O.symbol} already exists.`);t.constantRegistry.set(o,{id:o,...O}),t.constantSymbolRegistry.set(O.symbol,{id:o,...O})}t.registerConstant=s;function T(o,O){if(g(o))throw new Error(`Unary operator with id ${o} already exists.`);if(y(O.symbol))throw new Error(`Unary operator with symbol ${O.symbol} already exists.`);t.unaryOpRegistry.set(o,{id:o,...O}),t.unaryOpSymbolRegistry.set(O.symbol,{id:o,...O})}t.registerUnaryOp=T;function w(o,O){if(u(o))throw new Error(`Binary operator with id ${o} already exists.`);if(d(O.symbol))throw new Error(`Binary operator with symbol ${O.symbol} already exists.`);t.binaryOpRegistry.set(o,{id:o,...O}),t.binaryOpSymbolRegistry.set(O.symbol,{id:o,...O})}t.registerBinaryOp=w;function U(){return[...t.constantSymbolRegistry.keys()]}t.getConstantSymbols=U;function h(){return[...t.unaryOpSymbolRegistry.keys()]}t.getUnaryOpSymbols=h;function b(){return[...t.binaryOpSymbolRegistry.keys()]}t.getBinaryOpSymbols=b;function m(o){if(!r(o))throw new Error(`Constant with id ${o} is not registered.`);return t.constantRegistry.get(o)}t.getConstant=m;function c(o){if(!l(o))throw new Error(`Constant with symbol ${o} is not registered.`);return t.constantSymbolRegistry.get(o)}t.getConstantWithSymbol=c;function e(o){if(!g(o))throw new Error(`Unary operator with id ${o} is not registered.`);return t.unaryOpRegistry.get(o)}t.getUnaryOp=e;function p(o){if(!y(o))throw new Error(`Unary operator with symbol ${o} is not registered.`);return t.unaryOpSymbolRegistry.get(o)}t.getUnaryOpWithSymbol=p;function i(o){if(!u(o))throw new Error(`Binary operator with id ${o} is not registered.`);return t.binaryOpRegistry.get(o)}t.getBinaryOp=i;function f(o){if(!d(o))throw new Error(`Binary operator with symbol ${o} is not registered.`);return t.binaryOpSymbolRegistry.get(o)}t.getBinaryOpWithSymbol=f})(a||(a={}));var E;(t=>{function l(s){if(s===1/0)return 1/0;if(s>=0&&s<100&&Number.isInteger(s)){let T=1;for(let w=2;w<s+1;w++)T*=w;return T}return y(s+1)}t.factorial=l;function g(s){return l(s-1)}t.gamma=g;function y(s){const w=[.9999999999998099,676.5203681218851,-1259.1392167224028,771.3234287776531,-176.6150291621406,12.507343278686905,-.13857109526572012,9984369578019572e-21,15056327351493116e-23];if(s<.5)return Math.PI/(Math.sin(Math.PI*s)*y(1-s));s--;let U=w[0];for(let m=1;m<9;m++)U+=w[m]/(s+m);const h=s+7+.5,b=Math.pow(h,s+.5);return b===1/0?1/0:Math.sqrt(2*Math.PI)*b*Math.exp(-h)*U}function u(s,T){return l(s)/l(s-T)}t.permutation=u;function d(s,T){return u(s,T)/l(T)}t.combination=d})(E||(E={}));a.registerConstant("e",{symbol:"E",value:Math.E});a.registerConstant("pi",{symbol:"PI",value:Math.PI});a.registerUnaryOp("pos",{symbol:"+",type:n.UnaryOpTypes.Prefix,callback:t=>t});a.registerUnaryOp("neg",{symbol:"-",type:n.UnaryOpTypes.Prefix,callback:t=>-t});a.registerUnaryOp("factorial",{symbol:"!",type:n.UnaryOpTypes.Postfix,callback:E.factorial});a.registerUnaryOp("abs",{symbol:"abs",type:n.UnaryOpTypes.Function,callback:Math.abs});a.registerUnaryOp("floor",{symbol:"floor",type:n.UnaryOpTypes.Function,callback:Math.floor});a.registerUnaryOp("ceil",{symbol:"ceil",type:n.UnaryOpTypes.Function,callback:Math.ceil});a.registerUnaryOp("round",{symbol:"round",type:n.UnaryOpTypes.Function,callback:Math.round});a.registerUnaryOp("sqrt",{symbol:"sqrt",type:n.UnaryOpTypes.Function,callback:Math.sqrt});a.registerUnaryOp("exp",{symbol:"exp",type:n.UnaryOpTypes.Function,callback:Math.exp});a.registerUnaryOp("log",{symbol:"Ln",type:n.UnaryOpTypes.Function,callback:Math.log});a.registerUnaryOp("log10",{symbol:"log",type:n.UnaryOpTypes.Function,callback:Math.log10});a.registerUnaryOp("sin",{symbol:"sin",type:n.UnaryOpTypes.Function,callback:Math.sin});a.registerUnaryOp("cos",{symbol:"cos",type:n.UnaryOpTypes.Function,callback:Math.cos});a.registerUnaryOp("tan",{symbol:"tan",type:n.UnaryOpTypes.Function,callback:Math.tan});a.registerUnaryOp("asin",{symbol:"asin",type:n.UnaryOpTypes.Function,callback:Math.asin});a.registerUnaryOp("acos",{symbol:"acos",type:n.UnaryOpTypes.Function,callback:Math.acos});a.registerUnaryOp("atan",{symbol:"atan",type:n.UnaryOpTypes.Function,callback:Math.atan});a.registerUnaryOp("gamma",{symbol:"Gamma",type:n.UnaryOpTypes.Function,callback:E.gamma});a.registerBinaryOp("add",{symbol:"+",callback:(t,r)=>t+r,precedence:0});a.registerBinaryOp("sub",{symbol:"-",callback:(t,r)=>t-r,precedence:0});a.registerBinaryOp("mul",{symbol:"*",callback:(t,r)=>t*r,precedence:1});a.registerBinaryOp("div",{symbol:"/",callback:(t,r)=>t/r,precedence:1});a.registerBinaryOp("int_div",{symbol:"//",callback:(t,r)=>Math.floor(t/r),precedence:1});a.registerBinaryOp("pow",{symbol:"**",callback:(t,r)=>t**r,precedence:2});a.registerBinaryOp("pow_alias",{symbol:"^",callback:(t,r)=>t**r,precedence:2});a.registerBinaryOp("mod",{symbol:"%",callback:(t,r)=>t%r,precedence:2});const B=100;a.registerBinaryOp("min",{symbol:"min",callback:Math.min,precedence:B});a.registerBinaryOp("max",{symbol:"max",callback:Math.max,precedence:B});a.registerBinaryOp("permutation",{symbol:"P",callback:E.permutation,precedence:B});a.registerBinaryOp("combination",{symbol:"C",callback:E.combination,precedence:B});var $;(t=>{function r(h){const b=h.length,m=[];for(;h.length;){const c=b-h.length,e=d(h,c,m);h=h.slice(e.length)}return m}t.tokenize=r;class l{constructor(b,m,c){this.type=b,this.symbol=m,this.meta=c}toString(){return`Token[${this.meta.from}-${this.meta.to}]<${n.TokenTypes[this.type]}> ${this.symbol}`}}t.Token=l;const g=h=>h.replaceAll(/[.*+?^${}()|[\]\\]/g,"\\$&"),y=Object.keys(n.TokenTypes).length/2,u={[n.TokenTypes.Bracket]:/[()]/,[n.TokenTypes.Numeral]:new RegExp(`(?:${a.getConstantSymbols().sort((h,b)=>b.length-h.length).map(g).join(")|(?:")})|(?:\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)`),[n.TokenTypes.UnaryOp]:new RegExp(`(?:${a.getUnaryOpSymbols().sort((h,b)=>b.length-h.length).map(g).join(")|(?:")})`),[n.TokenTypes.BinaryOp]:new RegExp(`(?:${a.getBinaryOpSymbols().sort((h,b)=>b.length-h.length).map(g).join(")|(?:")})`)};function d(h,b,m){let c;for(let e=0;e<y;e++){const p=new RegExp(`^\\s*(?:${u[e].source})\\s*`);if(c=h.match(p)?.[0],c===void 0)continue;let i=c.trimStart();const f=b+c.length-i.length;i=i.trimEnd();const o=f+i.length-1,O={from:f,to:o},x=m.at(-1);switch(e){case n.TokenTypes.Bracket:{if(s(m,i,O,x))break;continue}case n.TokenTypes.Numeral:{if(T(m,i,O,x))break;continue}case n.TokenTypes.UnaryOp:{if(w(m,i,O,x))break;continue}case n.TokenTypes.BinaryOp:{if(U(m,i,O))break;continue}}break}if(!c)throw new SyntaxError(`Invalid symbol at ${b}.`);return c}function s(h,b,m,c){const e=c?.symbol===")"||c?.type===n.TokenTypes.Numeral||c?.type===n.TokenTypes.UnaryOp&&a.getUnaryOpWithSymbol(c.symbol).type===n.UnaryOpTypes.Postfix;if(b==="("&&e&&a.existBinaryOp("mul")){const i=new l(n.TokenTypes.BinaryOp,a.getBinaryOp("mul").symbol,m);h.push(i)}const p=new l(n.TokenTypes.Bracket,b,m);return h.push(p)}function T(h,b,m,c){const e=c?.symbol===")"||c?.type===n.TokenTypes.Numeral||c?.type===n.TokenTypes.UnaryOp&&a.getUnaryOpWithSymbol(c.symbol).type===n.UnaryOpTypes.Postfix;if(a.existConstantWithSymbol(b)&&e&&a.existBinaryOp("mul")){const i=new l(n.TokenTypes.BinaryOp,a.getBinaryOp("mul").symbol,m);h.push(i)}const p=new l(n.TokenTypes.Numeral,b,m);return h.push(p)}function w(h,b,m,c){const e=c?.symbol===")"||c?.type===n.TokenTypes.Numeral||c?.type===n.TokenTypes.UnaryOp&&a.getUnaryOpWithSymbol(c.symbol).type===n.UnaryOpTypes.Postfix;switch(a.getUnaryOpWithSymbol(b).type){case n.UnaryOpTypes.Prefix:{if(e)return!1;break}case n.UnaryOpTypes.Postfix:{if(!e)return!1;break}case n.UnaryOpTypes.Function:{if(!e||!a.existBinaryOp("mul"))break;const i=new l(n.TokenTypes.BinaryOp,a.getBinaryOp("mul").symbol,m);h.push(i);break}}const p=new l(n.TokenTypes.UnaryOp,b,m);return h.push(p)}function U(h,b,m,c){const e=new l(n.TokenTypes.BinaryOp,b,m);return h.push(e)}})($||($={}));var M;(t=>{function r(c){const e=new d,p={index:0,position:()=>{const i=p.tokens[p.index];return`${i.meta.from} - ${i.meta.to}`},tokens:c,pointer:e};for(;p.index<c.length;){const i=c[p.index];switch(i.type){case n.TokenTypes.Bracket:{U(i,p);break}case n.TokenTypes.Numeral:{h(i,p);break}case n.TokenTypes.UnaryOp:{b(i,p);break}case n.TokenTypes.BinaryOp:{m(i,p);break}}p.index++}return e}t.parse=r;class l{constructor(e,p){this.type=e,this.precedence=p}clone(){const e=Object.create(Object.getPrototypeOf(this));return Object.defineProperties(e,Object.getOwnPropertyDescriptors(this)),e}}t.Tree=l;const g=-1,y=Number.MAX_SAFE_INTEGER+1,u=Number.MAX_SAFE_INTEGER;class d extends l{$content;set content(e){this.$content=e,e.parent=this}get content(){return this.$content}constructor(){super(n.TreeTypes.Root,g)}toString(){return`${this.content?this.content.toString():"<Empty>"}`}}t.RootTree=d;class s extends l{constructor(e,p){super(n.TreeTypes.Numeral,y),this.parent=e,this.numeral=p}toString(e=1){return`Tree<Numeral>${`
`+"  ┃  ".repeat(e)}${this.numeral}`}}t.NumeralTree=s;class T extends l{constructor(e,p){super(n.TreeTypes.UnaryOp,u),this.parent=e,this.operator=a.getUnaryOpWithSymbol(p.symbol),this.meta=p.meta}$argument;set argument(e){this.$argument=e,e.parent=this}get argument(){return this.$argument}operator;meta;toString(e=1){const p=`
`+"  ┃  ".repeat(e);return`Tree<Unary>${p}Operator: ${this.operator.id} (${this.operator.symbol})${p}Argument: ${this.argument?this.argument.toString(e+1):"<Empty>"}`}}t.UnaryOpTree=T;class w extends l{constructor(e,p){const i=a.getBinaryOpWithSymbol(p.symbol);super(n.TreeTypes.BinaryOp,i.precedence),this.parent=e,this.operator=i,this.meta=p.meta}$left;$right;set left(e){this.$left=e,e.parent=this}get left(){return this.$left}set right(e){this.$right=e,e.parent=this}get right(){return this.$right}operator;meta;toString(e=1){const p=`
`+"  ┃  ".repeat(e);return`Tree<Binary>${p}Operator: ${this.operator.id} (${this.operator.symbol})${p}Left: ${this.left?this.left.toString(e+1):"<Empty>"}${p}Right: ${this.right?this.right.toString(e+1):"<Empty>"}`}}t.BinaryOpTree=w;function U(c,e){if(c.symbol===")")throw new SyntaxError(`Lone right bracket at ${e.position()}.`);if(e.pointer.type===n.TreeTypes.Numeral)throw new SyntaxError(`Missing operator before bracket at ${e.position()}.`);const p=e.index;let i=p,f=1;for(;i<e.tokens.length-1&&(i++,!(e.tokens[i].type===n.TokenTypes.Bracket&&(e.tokens[i].symbol==="("?f++:f--,f===0))););if(f!==0)throw new SyntaxError(`Unbalanced bracket at ${e.position()}.`);if(i===p+1)throw new SyntaxError(`Empty brackets at ${e.position()}.`);e.index=i;const o=r(e.tokens.slice(p+1,i));switch(o.content.precedence=y,e.pointer.type){case n.TreeTypes.Root:{const O=e.pointer;e.pointer=O.content=o.content;break}case n.TreeTypes.UnaryOp:{const O=e.pointer;e.pointer=O.argument=o.content;break}case n.TreeTypes.BinaryOp:{const O=e.pointer;e.pointer=O.right=o.content;break}}}function h(c,e){if(e.pointer.type===n.TreeTypes.Numeral)throw new SyntaxError(`Missing operator between numerals at ${e.position()}.`);const p=new s(e.pointer,c);switch(e.pointer.type){case n.TreeTypes.Root:{const i=e.pointer;e.pointer=i.content=p;break}case n.TreeTypes.UnaryOp:{const i=e.pointer;e.pointer=i.argument=p;break}case n.TreeTypes.BinaryOp:{const i=e.pointer;e.pointer=i.right=p;break}}}function b(c,e){for(;e.pointer.type!==n.TreeTypes.Root&&e.pointer.precedence>u;)e.pointer=e.pointer.parent;const i=a.getUnaryOpWithSymbol(c.symbol).type===n.UnaryOpTypes.Postfix;if(i&&!(e.pointer.type===n.TreeTypes.Root&&e.pointer.content||e.pointer.type===n.TreeTypes.UnaryOp&&e.pointer.argument||e.pointer.type===n.TreeTypes.BinaryOp&&e.pointer.right))throw new SyntaxError(`Missing entry before postfix unary operator at ${e.position()}.`);const f=new T(e.pointer,c);switch(e.pointer.type){case n.TreeTypes.Root:{const o=e.pointer;i&&(f.argument=o.content.clone()),e.pointer=o.content=f;break}case n.TreeTypes.UnaryOp:{const o=e.pointer;i&&(f.argument=o.argument.clone()),e.pointer=o.argument=f;break}case n.TreeTypes.BinaryOp:{const o=e.pointer;i&&(f.argument=o.right.clone()),e.pointer=o.right=f;break}}}function m(c,e){if(e.pointer.type===n.TreeTypes.Root)throw new SyntaxError(`Missing entry before binary operator at ${e.position()}.`);const p=a.getBinaryOpWithSymbol(c.symbol);for(;e.pointer.precedence>=p.precedence;)e.pointer=e.pointer.parent;const i=new w(e.pointer,c);switch(e.pointer.type){case n.TreeTypes.Root:{const f=e.pointer;i.left=f.content.clone(),e.pointer=f.content=i;break}case n.TreeTypes.UnaryOp:{const f=e.pointer;i.left=f.clone(),e.pointer=f.argument=i;break}case n.TreeTypes.BinaryOp:{const f=e.pointer;i.left=f.right.clone(),e.pointer=f.right=i;break}}}})(M||(M={}));var C;(t=>{function r(s){switch(s.type){case n.TreeTypes.Root:return l(s);case n.TreeTypes.Numeral:return g(s);case n.TreeTypes.UnaryOp:return y(s);case n.TreeTypes.BinaryOp:return u(s)}}t.evaluate=r;function l(s){if(!s.content)throw new SyntaxError("Evaluating empty tree.");return r(s.content)}function g(s){const T=s.numeral.symbol;return a.existConstantWithSymbol(T)?a.getConstantWithSymbol(T).value:Number(T)}function y(s){if(!s.argument)throw new SyntaxError(`Unary operator lacks argument at ${d(s.meta)}.`);const T=a.getUnaryOpWithSymbol(s.operator.symbol).callback;return T(r(s.argument))}function u(s){if(!s.left)throw new SyntaxError(`Binary operator lacks left operand at ${d(s.meta)}.`);if(!s.right)throw new SyntaxError(`Binary operator lacks right operand at ${d(s.meta)}.`);const T=a.getBinaryOpWithSymbol(s.operator.symbol).callback,w=r(s.left),U=r(s.right);return T(w,U)}const d=s=>`${s.from} - ${s.to}`})(C||(C={}));var N;(t=>{function r(g){const y=$.tokenize(g),u=M.parse(y),d=C.evaluate(u);return{tokens:y,tree:u,value:d}}t.calculate=r;function l(g){return r(g).value}t.value=l})(N||(N={}));const v=50,S=document.getElementById("input"),k=document.getElementById("result");P(S.getAttribute("placeholder"));S.oninput=()=>P(S.value);function P(t){console.clear(),k.classList.remove("error");let r;try{r=N.calculate(t.length===0?S.getAttribute("placeholder"):t)}catch(l){k.innerHTML="",k.classList.add("error");const g=document.createElement("p");g.textContent=`${l}`.replace(/.*Error: /,""),k.appendChild(g);return}console.log(`${r.tree}`),R(r.tokens,r.value)}function R(t,r){if(k.innerHTML="",t.reduce((y,u)=>y+u.symbol.length,0)>v){const y=document.createElement("p");y.textContent="Expression",k.appendChild(y)}else for(const y of t){const u=document.createElement("p");u.textContent=y.symbol,u.className=n.TokenTypes[y.type],k.appendChild(u)}const l=document.createElement("p");l.textContent=" = ",k.appendChild(l);const g=document.createElement("p");g.textContent=`${r}`,k.appendChild(g)}
